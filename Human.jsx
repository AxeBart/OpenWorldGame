/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/human.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useEffect } from 'react'

export function Human(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/human.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions, names } = useAnimations(animations, group)
  // console.log(names)

  
  useEffect(() => {
    actions?.[ props.animation]?.stop(); // ArrÃªte l'props.animation en cours
    actions[ props.animation]?.reset().fadeIn(0.24).play();
    return () => actions?.[ props.animation]?.fadeOut(0.24);
}, [props.animation]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="Human_Armature" scale={69.183}>
            <primitive object={nodes.Hips} />
          </group>
          <skinnedMesh castShadow receiveShadow name="Human_Mesh" geometry={nodes.Human_Mesh.geometry} material={materials.Texture} skeleton={nodes.Human_Mesh.skeleton} scale={69.183} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/human.glb')
